digraph G {

    //node [style = filled, shape = box, color = "0.20,0.42,0.94"]; conv1 conv2;
    node [shape = octagon]; data output;
    //blue
    node [style = filled, shape = box, color = "#346df1", fontcolor = white];
    conv1_1 conv2_1 conv3_1 conv4_1 conv5_1 fc6_1 fc7_1 fc8;
    conv1_2 conv2_2 conv3_2 conv4_2 conv5_2 fc6_2 fc7_2;
    //red
    node [style = filled, shape = box, color = "#d02d2b", fontcolor = white];
    pooling1_1 pooling2_1 pooling5_1;
    pooling1_2 pooling2_2 pooling5_2;
    //yellow
    node [style = filled, shape = box, color = "#efa609", fontcolor = white];
    softmax;
    //green
    node [style = filled, shape = box, color = "#178f46", fontcolor = white];

	data->conv1_1;
	conv1_1->pooling1_1;

	pooling1_1->conv2_1;
	conv2_1->pooling2_1;

	pooling2_1->conv3_1;
    conv3_1->conv4_1;
    conv4_1->conv5_1
	conv5_1->pooling5_1;

    pooling5_1->fc6_1;
    fc6_1->fc7_1;
    fc7_1->fc8;


    data->conv1_2
	conv1_2->pooling1_2;

	pooling1_2->conv2_2;
	conv2_2->pooling2_2;

	pooling2_2->conv3_2;
    conv3_2->conv4_2;
    conv4_2->conv5_2
	conv5_2->pooling5_2;

    pooling5_2->fc6_2;
    fc6_2->fc7_2;
    fc7_2->fc8;

    fc8->softmax;
    softmax->output

	//main->init[style = dotted];//虚线

	//main->cleanup;

	//execute->{make_string; printf}//连接两个

	//init->make_string;

	//edge[color = red]; // 连接线的颜色

	//main->printf[style=bold, label="100 times"];//线的 label

	//make_string[label = "make a\nstring"]// \n, 这个node的label，注意和上一行的区别

	//node[shape = box, style = filled, color = ".7.3 1.0"];//一个node的属性

	//execute->compare;
}
